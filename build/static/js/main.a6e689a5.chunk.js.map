{"version":3,"sources":["RedditLink.js","actions.js","Feed.js","Contact.js","App.js","Reducer.js","store.js","index.js"],"names":["RedditLinks","props","rlinks","data","id","src","thumbnail","alt","author","rel","target","href","permalink","title","Action","Object","freeze","LoadLinks","checkForErrors","response","ok","Error","status","statusText","loadLinksWeb","dispatch","fetch","then","json","redditLinks","type","payload","catch","e","console","error","Feed","store","useSelector","state","useDispatch","useEffect","sreddit","length","undefined","className","keyIndex","children","subreddit_name_prefixed","map","Contact","App","to","activeClassName","path","initialState","reducer","action","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e689a5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function RedditLinks(props){\r\n    const rlinks = props.data.data;\r\n    return (\r\n        <div id=\"linkdiv\">\r\n            <img src={rlinks.thumbnail} alt={`user: ${rlinks.author}'s post`}></img>\r\n            <a rel=\"noreferrer\" target='_blank' href={\"https://reddit.com\" + rlinks.permalink}>{rlinks.title}</a>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export const Action = Object.freeze({\r\n    LoadLinks: 'LoadLinks',\r\n});\r\n\r\nexport function loadLinks(redditLinks){\r\n    return {\r\n        type: Action.LoadLinks,\r\n        payload: redditLinks,\r\n    };\r\n}\r\n\r\n\r\nfunction checkForErrors(response){\r\n    if(!response.ok){\r\n        throw Error(`${response.status}: ${response.statusText}`);\r\n    }\r\n    return response;\r\n}\r\n\r\n\r\nconst host = 'https://www.reddit.com';\r\n\r\n\r\n\r\nexport function loadLinksWeb(title){\r\n    return dispatch => {\r\n        fetch(`${host}/r/${title}/top/.json?limit=5`)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(loadLinks(data));\r\n        })\r\n        .catch(e => console.error(e));\r\n        \r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { RedditLinks } from './RedditLink';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadLinksWeb } from './actions';\r\n\r\nexport function Feed(props) {\r\n    // store calls reducer function which returns the state. the state has redditLinks\r\n    const store = useSelector(state => state.redditLinks);\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        let sreddit = [\"food\", \"pics\", \"aww\"];\r\n        if (store.length  === 0) {\r\n            dispatch(loadLinksWeb(sreddit[0]));\r\n            dispatch(loadLinksWeb(sreddit[1]));\r\n            dispatch(loadLinksWeb(sreddit[2]));\r\n        }\r\n    }\r\n        , [dispatch, store]);\r\n\r\n\r\n\r\n    if (store.length !== 3 || store[0].data === undefined || store[1].data === undefined || store[2].data === undefined) {\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Loading stuff... \t&#9786;</h1>\r\n                <h4>Refresh if things don't load after a few seconds</h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    var keyIndex = 0;\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            {/* NEWS FEED */}\r\n            <div className=\"Header\">Your news feed:</div>\r\n\r\n            {store[0].data.children[0].data.subreddit_name_prefixed}\r\n            {store[0].data.children.map(data => <RedditLinks key={keyIndex++} data={data} />)}\r\n\r\n            {store[1].data.children[0].data.subreddit_name_prefixed}\r\n            {store[1].data.children.map(data => <RedditLinks key={keyIndex++} data={data} />)}\r\n\r\n            {store[2].data.children[0].data.subreddit_name_prefixed}\r\n            {store[2].data.children.map(data => <RedditLinks key={keyIndex++} data={data} />)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Contact(){\r\n    return(\r\n        <div>\r\n            For questions/concerns please contact the website administrators at: <br></br> kevinshu1999@gmail.com or devdutt@gmail.com\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\nimport './App.css';\nimport { Feed } from './Feed';\nimport { Contact } from './Contact';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* NAVBAR */}\n      <div className=\"navbar\">\n        <ul>\n          <li><NavLink to=\"/feed\" activeClassName=\"current-navlink\">Home</NavLink></li>\n          <li><NavLink to=\"/contact\" activeClassName=\"current-navlink\">Contact</NavLink></li>\n        </ul>\n      </div>\n      <Switch>\n        <Route path=\"/feed\">\n          <Feed />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n\n\n        <Redirect to=\"/feed\" />\n      </Switch>\n    </div>\n  );\n\n}\n\n\n\n\nexport default App;\n","import { Action } from \"./actions\";\r\n\r\nconst initialState = {\r\n    redditLinks: [],\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Action.LoadLinks:\r\n            return {\r\n                ...state,\r\n                redditLinks: [action.payload, ...state.redditLinks],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './Reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}